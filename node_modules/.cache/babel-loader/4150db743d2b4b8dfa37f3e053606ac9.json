{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './rootReducer';\nvar middleware = [thunk];\nvar store = createStore(rootReducer, compose(applyMiddleware.apply(void 0, middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/aalasseh/Desktop/srFECogngy/src/redux/store.tsx"],"names":["createStore","applyMiddleware","compose","thunk","rootReducer","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAQC,WAAR,MAA0B,eAA1B;AAEA,IAAMC,UAAU,GAAG,CAACF,KAAD,CAAnB;AAEA,IAAMG,KAAK,GAAGN,WAAW,CAACI,WAAD,EAAcF,OAAO,CAACD,eAAe,MAAf,SAAmBI,UAAnB,CAAD,CAArB,CAAzB;AAIA,eAAeC,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport  rootReducer  from './rootReducer';\n\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer, compose(applyMiddleware(...middleware)));\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default store ;"]},"metadata":{},"sourceType":"module"}