{"ast":null,"code":"var _jsxFileName = \"/Users/aalasseh/Desktop/srFECogngy/src/container/ChatBox.tsx\",\n    _s = $RefreshSig$();\n\nimport { History } from \"../components/History\";\nimport { Message } from \"../components/Message\";\nimport { Input } from \"../components/Input\";\nimport { Loader } from \"../components/Loader/Loader\";\nimport { socket } from '../api';\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ChatBox() {\n  _s();\n\n  var _this = this;\n\n  var _useSelector = useSelector(function (state) {\n    return state;\n  }),\n      messags = _useSelector.messags,\n      loader = _useSelector.loader;\n\n  useEffect(function () {\n    var objDiv = document.getElementById(\"History-id\");\n    objDiv.scrollTop = objDiv.scrollHeight;\n  }, [messags]);\n\n  var onSubmit = function onSubmit(message) {\n    socket.sendMessage(message);\n  };\n\n  var dispalyMessages = function dispalyMessages() {\n    var list = [];\n    messags.list.forEach(function (element) {\n      var words = element.text.split(':');\n\n      if (words[0] === \"You said\") {\n        list.push( /*#__PURE__*/_jsxDEV(Message, {\n          direction: \"outgoing\",\n          children: words[1]\n        }, element.traceId + words[1], false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 27\n        }, _this));\n      } else {\n        list.push( /*#__PURE__*/_jsxDEV(Message, {\n          direction: \"incoming\",\n          children: words[0]\n        }, element.traceId + words[0], false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 27\n        }, _this));\n      }\n    });\n    return list;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 300,\n      height: 400,\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(History, {\n      children: dispalyMessages()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {\n      isLoading: loader.isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatBox, \"+1TUskHczJ/Lwfim0Nro4Gbkcqc=\", false, function () {\n  return [useSelector];\n});\n\n_c = ChatBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"sources":["/Users/aalasseh/Desktop/srFECogngy/src/container/ChatBox.tsx"],"names":["History","Message","Input","Loader","socket","useSelector","useEffect","ChatBox","state","messags","loader","objDiv","document","getElementById","scrollTop","scrollHeight","onSubmit","message","sendMessage","dispalyMessages","list","forEach","element","words","text","split","push","traceId","width","height","display","flexDirection","position","isLoading"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAAyBC,WAAzB,QAA4C,aAA5C;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AAAA;;AAEtB,qBAAyBF,WAAW,CAAC,UAACG,KAAD;AAAA,WAA2BA,KAA3B;AAAA,GAAD,CAApC;AAAA,MAAOC,OAAP,gBAAOA,OAAP;AAAA,MAAeC,MAAf,gBAAeA,MAAf;;AAEAJ,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMK,MAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAApB;AACAF,IAAAA,MAAM,CAACG,SAAP,GAAmBH,MAAM,CAACI,YAA1B;AACH,GAHQ,EAGN,CAACN,OAAD,CAHM,CAAT;;AAKA,MAAMO,QAAQ,GAAG,SAAXA,QAAW,CAACC,OAAD,EAAqB;AAElCb,IAAAA,MAAM,CAACc,WAAP,CAAmBD,OAAnB;AACH,GAHD;;AAKA,MAAME,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAE1B,QAAMC,IAAS,GAAG,EAAlB;AACAX,IAAAA,OAAO,CAACW,IAAR,CAAaC,OAAb,CAAqB,UAACC,OAAD,EAAkB;AAEnC,UAAMC,KAAK,GAAGD,OAAO,CAACE,IAAR,CAAaC,KAAb,CAAmB,GAAnB,CAAd;;AACA,UAAIF,KAAK,CAAC,CAAD,CAAL,KAAa,UAAjB,EAA6B;AACzBH,QAAAA,IAAI,CAACM,IAAL,eAAU,QAAC,OAAD;AAAwC,UAAA,SAAS,EAAC,UAAlD;AAAA,oBAA8DH,KAAK,CAAC,CAAD;AAAnE,WAAcD,OAAO,CAACK,OAAR,GAAgBJ,KAAK,CAAC,CAAD,CAAnC;AAAA;AAAA;AAAA;AAAA,iBAAV;AAEH,OAHD,MAGO;AACHH,QAAAA,IAAI,CAACM,IAAL,eAAU,QAAC,OAAD;AAAwC,UAAA,SAAS,EAAC,UAAlD;AAAA,oBAA8DH,KAAK,CAAC,CAAD;AAAnE,WAAcD,OAAO,CAACK,OAAR,GAAgBJ,KAAK,CAAC,CAAD,CAAnC;AAAA;AAAA;AAAA;AAAA,iBAAV;AACH;AAEJ,KAVD;AAYA,WAAOH,IAAP;AAEH,GAjBD;;AAmBA,sBAEI;AACI,IAAA,KAAK,EAAE;AACHQ,MAAAA,KAAK,EAAE,GADJ;AAEHC,MAAAA,MAAM,EAAE,GAFL;AAGHC,MAAAA,OAAO,EAAE,MAHN;AAIHC,MAAAA,aAAa,EAAE,QAJZ;AAKHC,MAAAA,QAAQ,EAAC;AALN,KADX;AAAA,4BAUI,QAAC,OAAD;AAAA,gBAEKb,eAAe;AAFpB;AAAA;AAAA;AAAA;AAAA,YAVJ,eAeI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAET,MAAM,CAACuB;AAA1B;AAAA;AAAA;AAAA;AAAA,YAfJ,eAiBI,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAEjB;AAAjB;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAuBH;;GAxDeT,O;UAEaF,W;;;KAFbE,O","sourcesContent":["import { History } from \"../components/History\";\nimport { Message } from \"../components/Message\";\nimport { Input } from \"../components/Input\";\nimport { Loader } from \"../components/Loader/Loader\";\nimport { socket } from '../api'\nimport { RootStateOrAny, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nexport function ChatBox() {\n\n    const {messags,loader} = useSelector((state: RootStateOrAny) => state);\n\n    useEffect(() => {\n        const objDiv: any = document.getElementById(\"History-id\");\n        objDiv.scrollTop = objDiv.scrollHeight;\n    }, [messags]);\n\n    const onSubmit = (message: string) => {\n\n        socket.sendMessage(message)\n    }\n\n    const dispalyMessages = () => {\n\n        const list: any = []\n        messags.list.forEach((element: any) => {\n \n            const words = element.text.split(':');\n            if (words[0] === \"You said\") {\n                list.push(<Message key={element.traceId+words[1]} direction=\"outgoing\">{words[1]}</Message>)\n\n            } else {\n                list.push(<Message key={element.traceId+words[0]} direction=\"incoming\">{words[0]}</Message>)\n            }\n\n        }\n        )\n        return list;\n\n    }\n\n    return (\n\n        <div\n            style={{\n                width: 300,\n                height: 400,\n                display: \"flex\",\n                flexDirection: \"column\",\n                position:\"relative\"\n\n            }}\n        >\n            <History>\n\n                {dispalyMessages()}\n\n            </History>\n            <Loader isLoading={loader.isLoading}/>\n            {/* TODO: send message on submit */}\n            <Input onSubmit={onSubmit} />\n        </div >\n\n    );\n}\n"]},"metadata":{},"sourceType":"module"}